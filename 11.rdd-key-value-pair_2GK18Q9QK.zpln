{
  "paragraphs": [
    {
      "text": "%md\n# Working with key/value pair RDDs",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.681",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eWorking with key/value pair RDDs\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825681_898638422",
      "id": "20211106-100025_1717282623",
      "dateCreated": "2021-11-06 10:00:25.681",
      "status": "READY"
    },
    {
      "text": "%md\nSpark provides specific functions to deal with RDDs which elements are key/value pairs. They are usually used to perform aggregations and other processings by key.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.681",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eSpark provides specific functions to deal with RDDs which elements are key/value pairs. They are usually used to perform aggregations and other processings by key. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825681_1911529535",
      "id": "20211106-100025_2027860601",
      "dateCreated": "2021-11-06 10:00:25.681",
      "status": "READY"
    },
    {
      "text": "%md\nIn this notebook we will show how, by working with key/value pairs, we can process our network interactions dataset in a more practical and powerful way than that used in previous notebooks. Key/value pair aggregations will show to be particularly effective when trying to explore each type of tag in our network attacks, in an individual way.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIn this notebook we will show how, by working with key/value pairs, we can process our network interactions dataset in a more practical and powerful way than that used in previous notebooks. Key/value pair aggregations will show to be particularly effective when trying to explore each type of tag in our network attacks, in an individual way. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_1286993422",
      "id": "20211106-100025_1359698874",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%md\n## Getting the data and creating the RDD",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eGetting the data and creating the RDD\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_298672204",
      "id": "20211106-100025_800129004",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%md\nAs we did in our first notebook, we will use the reduced dataset (10 percent) provided for the [KDD Cup 1999](http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html), containing nearly half million network interactions. The file is provided as a Gzip file that we will download locally.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAs we did in our first notebook, we will use the reduced dataset (10 percent) provided for the \u003ca href\u003d\"http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html\"\u003eKDD Cup 1999\u003c/a\u003e, containing nearly half million network interactions. The file is provided as a Gzip file that we will download locally. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_32777559",
      "id": "20211106-100025_471403904",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%python\nimport urllib\nf \u003d urllib.urlretrieve (\"http://kdd.ics.uci.edu/databases/kddcup99/kddcup.data_10_percent.gz\", \"kddcup.data_10_percent.gz\")",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/python",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_973080163",
      "id": "20211106-100025_524876471",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%pyspark\ndata_file \u003d \"hdfs://namenode:9000/dataset/kddcup.data_10_percent.gz\"\nraw_data \u003d sc.textFile(data_file)",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 13:51:36.201",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_371228380",
      "id": "20211106-100025_303501545",
      "dateCreated": "2021-11-06 10:00:25.682",
      "dateStarted": "2021-11-06 13:51:36.210",
      "dateFinished": "2021-11-06 13:51:36.230",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Creating a pair RDD for interaction types",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eCreating a pair RDD for interaction types\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_261655959",
      "id": "20211106-100025_584290780",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%md\nIn this notebook we want to do some exploratory data analysis on our network interactions dataset. More concretely we want to profile each network interaction type in terms of some of its variables such as duration. In order to do so, we first need to create the RDD suitable for that, where each interaction is parsed as a CSV row representing the value, and is put together with its corresponding tag as a key.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eIn this notebook we want to do some exploratory data analysis on our network interactions dataset. More concretely we want to profile each network interaction type in terms of some of its variables such as duration. In order to do so, we first need to create the RDD suitable for that, where each interaction is parsed as a CSV row representing the value, and is put together with its corresponding tag as a key. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_1253090724",
      "id": "20211106-100025_1553889451",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%md\nNormally we create key/value pair RDDs by applying a function using `map` to the original data. This function returns the corresponding pair for a given RDD element. We can proceed as follows.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eNormally we create key/value pair RDDs by applying a function using \u003ccode\u003emap\u003c/code\u003e to the original data. This function returns the corresponding pair for a given RDD element. We can proceed as follows. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_2036857032",
      "id": "20211106-100025_1504053617",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%pyspark\ncsv_data \u003d raw_data.map(lambda x: x.split(\",\"))\nkey_value_data \u003d csv_data.map(lambda x: (x[41], x)) # x[41] contains the network interaction tag",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 13:52:29.812",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_1569693935",
      "id": "20211106-100025_1017977300",
      "dateCreated": "2021-11-06 10:00:25.682",
      "dateStarted": "2021-11-06 13:52:29.820",
      "dateFinished": "2021-11-06 13:52:29.844",
      "status": "FINISHED"
    },
    {
      "text": "%md\nWe have now our key/value pair data ready to be used. Let\u0027s get the first element in order to see how it looks like.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe have now our key/value pair data ready to be used. Let\u0026rsquo;s get the first element in order to see how it looks like. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_1713331308",
      "id": "20211106-100025_660440654",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%pyspark\nkey_value_data.take(1)",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 13:52:34.567",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(\u0027normal.\u0027, [\u00270\u0027, \u0027tcp\u0027, \u0027http\u0027, \u0027SF\u0027, \u0027181\u0027, \u00275450\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00271\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00270\u0027, \u00278\u0027, \u00278\u0027, \u00270.00\u0027, \u00270.00\u0027, \u00270.00\u0027, \u00270.00\u0027, \u00271.00\u0027, \u00270.00\u0027, \u00270.00\u0027, \u00279\u0027, \u00279\u0027, \u00271.00\u0027, \u00270.00\u0027, \u00270.11\u0027, \u00270.00\u0027, \u00270.00\u0027, \u00270.00\u0027, \u00270.00\u0027, \u00270.00\u0027, \u0027normal.\u0027])]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://6d3799a39347:4040/jobs/job?id\u003d34"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_1954777175",
      "id": "20211106-100025_927725981",
      "dateCreated": "2021-11-06 10:00:25.682",
      "dateStarted": "2021-11-06 13:52:34.576",
      "dateFinished": "2021-11-06 13:52:34.652",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## Data aggregations with key/value pair RDDs",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eData aggregations with key/value pair RDDs\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_1802746638",
      "id": "20211106-100025_1582269316",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%md\nWe can use all the transformations and actions available for normal RDDs with key/value pair RDDs. We just need to make the functions work with pair elements. Additionally, Spark provides specific functions to work with RDDs containing pair elements. They are very similar to those available for general RDDs.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe can use all the transformations and actions available for normal RDDs with key/value pair RDDs. We just need to make the functions work with pair elements. Additionally, Spark provides specific functions to work with RDDs containing pair elements. They are very similar to those available for general RDDs. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_1916756163",
      "id": "20211106-100025_175657504",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%md\nFor example, we have a `reduceByKey` transformation that we can use as follows to calculate the total duration of each network interaction type.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eFor example, we have a \u003ccode\u003ereduceByKey\u003c/code\u003e transformation that we can use as follows to calculate the total duration of each network interaction type. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_298131575",
      "id": "20211106-100025_999484248",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%pyspark\nkey_value_duration \u003d csv_data.map(lambda x: (x[41], float(x[0]))) \ndurations_by_key \u003d key_value_duration.reduceByKey(lambda x, y: x + y)\n\ndurations_by_key.collect()",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 13:54:06.150",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(\u0027normal.\u0027, 21075991.0), (\u0027buffer_overflow.\u0027, 2751.0), (\u0027loadmodule.\u0027, 326.0), (\u0027perl.\u0027, 124.0), (\u0027neptune.\u0027, 0.0), (\u0027smurf.\u0027, 0.0), (\u0027guess_passwd.\u0027, 144.0), (\u0027pod.\u0027, 0.0), (\u0027teardrop.\u0027, 0.0), (\u0027portsweep.\u0027, 1991911.0), (\u0027ipsweep.\u0027, 43.0), (\u0027land.\u0027, 0.0), (\u0027ftp_write.\u0027, 259.0), (\u0027back.\u0027, 284.0), (\u0027imap.\u0027, 72.0), (\u0027satan.\u0027, 64.0), (\u0027phf.\u0027, 18.0), (\u0027nmap.\u0027, 0.0), (\u0027multihop.\u0027, 1288.0), (\u0027warezmaster.\u0027, 301.0), (\u0027warezclient.\u0027, 627563.0), (\u0027spy.\u0027, 636.0), (\u0027rootkit.\u0027, 1008.0)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://6d3799a39347:4040/jobs/job?id\u003d35"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_403985865",
      "id": "20211106-100025_620631577",
      "dateCreated": "2021-11-06 10:00:25.682",
      "dateStarted": "2021-11-06 13:54:06.160",
      "dateFinished": "2021-11-06 13:54:09.088",
      "status": "FINISHED"
    },
    {
      "text": "%md\nWe have a specific counting action for key/value pairs.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.682",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe have a specific counting action for key/value pairs. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_1735403755",
      "id": "20211106-100025_2141520176",
      "dateCreated": "2021-11-06 10:00:25.682",
      "status": "READY"
    },
    {
      "text": "%pyspark\ncounts_by_key \u003d key_value_data.countByKey()\ncounts_by_key",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 13:55:02.967",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defaultdict(\u003cclass \u0027int\u0027\u003e, {\u0027normal.\u0027: 97278, \u0027buffer_overflow.\u0027: 30, \u0027loadmodule.\u0027: 9, \u0027perl.\u0027: 3, \u0027neptune.\u0027: 107201, \u0027smurf.\u0027: 280790, \u0027guess_passwd.\u0027: 53, \u0027pod.\u0027: 264, \u0027teardrop.\u0027: 979, \u0027portsweep.\u0027: 1040, \u0027ipsweep.\u0027: 1247, \u0027land.\u0027: 21, \u0027ftp_write.\u0027: 8, \u0027back.\u0027: 2203, \u0027imap.\u0027: 12, \u0027satan.\u0027: 1589, \u0027phf.\u0027: 4, \u0027nmap.\u0027: 231, \u0027multihop.\u0027: 7, \u0027warezmaster.\u0027: 20, \u0027warezclient.\u0027: 1020, \u0027spy.\u0027: 2, \u0027rootkit.\u0027: 10})\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://6d3799a39347:4040/jobs/job?id\u003d36"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825682_1897984518",
      "id": "20211106-100025_337553162",
      "dateCreated": "2021-11-06 10:00:25.682",
      "dateStarted": "2021-11-06 13:55:02.974",
      "dateFinished": "2021-11-06 13:55:04.988",
      "status": "FINISHED"
    },
    {
      "text": "%md\n### Using `combineByKey`",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.683",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eUsing \u003ccode\u003ecombineByKey\u003c/code\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825683_1031269447",
      "id": "20211106-100025_947537658",
      "dateCreated": "2021-11-06 10:00:25.683",
      "status": "READY"
    },
    {
      "text": "%md\nThis is the most general of the per-key aggregation functions. Most of the other per-key combiners are implemented using it. We can think about it as the `aggregate` equivalent since it allows the user to return values that are not the same type as our input data.",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.683",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThis is the most general of the per-key aggregation functions. Most of the other per-key combiners are implemented using it. We can think about it as the \u003ccode\u003eaggregate\u003c/code\u003e equivalent since it allows the user to return values that are not the same type as our input data.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825683_869638103",
      "id": "20211106-100025_1818280242",
      "dateCreated": "2021-11-06 10:00:25.683",
      "status": "READY"
    },
    {
      "text": "%md\nFor example, we can use it to calculate per-type average durations as follows.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.683",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eFor example, we can use it to calculate per-type average durations as follows. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825683_1754684536",
      "id": "20211106-100025_1000075535",
      "dateCreated": "2021-11-06 10:00:25.683",
      "status": "READY"
    },
    {
      "text": "%python\nsum_counts \u003d key_value_duration.combineByKey(\n    (lambda x: (x, 1)), # the initial value, with value x and count 1\n    (lambda acc, value: (acc[0]+value, acc[1]+1)), # how to combine a pair value with the accumulator: sum value, and increment count\n    (lambda acc1, acc2: (acc1[0]+acc2[0], acc1[1]+acc2[1])) # combine accumulators\n)\n\nsum_counts.collectAsMap()",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.683",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/python",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "{u\u0027back.\u0027: (284.0, 2203),\n u\u0027buffer_overflow.\u0027: (2751.0, 30),\n u\u0027ftp_write.\u0027: (259.0, 8),\n u\u0027guess_passwd.\u0027: (144.0, 53),\n u\u0027imap.\u0027: (72.0, 12),\n u\u0027ipsweep.\u0027: (43.0, 1247),\n u\u0027land.\u0027: (0.0, 21),\n u\u0027loadmodule.\u0027: (326.0, 9),\n u\u0027multihop.\u0027: (1288.0, 7),\n u\u0027neptune.\u0027: (0.0, 107201),\n u\u0027nmap.\u0027: (0.0, 231),\n u\u0027normal.\u0027: (21075991.0, 97278),\n u\u0027perl.\u0027: (124.0, 3),\n u\u0027phf.\u0027: (18.0, 4),\n u\u0027pod.\u0027: (0.0, 264),\n u\u0027portsweep.\u0027: (1991911.0, 1040),\n u\u0027rootkit.\u0027: (1008.0, 10),\n u\u0027satan.\u0027: (64.0, 1589),\n u\u0027smurf.\u0027: (0.0, 280790),\n u\u0027spy.\u0027: (636.0, 2),\n u\u0027teardrop.\u0027: (0.0, 979),\n u\u0027warezclient.\u0027: (627563.0, 1020),\n u\u0027warezmaster.\u0027: (301.0, 20)}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825683_261293775",
      "id": "20211106-100025_1515992961",
      "dateCreated": "2021-11-06 10:00:25.683",
      "status": "READY"
    },
    {
      "text": "%md\nWe can see that the arguments are pretty similar to those passed to `aggregate` in the previous notebook. The result associated to each type is in the form of a pair. If we want to actually get the averages, we need to do the division before collecting the results.  ",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.683",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe can see that the arguments are pretty similar to those passed to \u003ccode\u003eaggregate\u003c/code\u003e in the previous notebook. The result associated to each type is in the form of a pair. If we want to actually get the averages, we need to do the division before collecting the results. \u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825683_1523840341",
      "id": "20211106-100025_813426598",
      "dateCreated": "2021-11-06 10:00:25.683",
      "status": "READY"
    },
    {
      "text": "%python\nduration_means_by_type \u003d sum_counts.map(lambda (key,value): (key, round(value[0]/value[1],3))).collectAsMap()\n\n# Print them sorted\nfor tag in sorted(duration_means_by_type, key\u003dduration_means_by_type.get, reverse\u003dTrue):\n    print(tag, duration_means_by_type[tag])",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.683",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/python",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "portsweep. 1915.299\nwarezclient. 615.258\nspy. 318.0\nnormal. 216.657\nmultihop. 184.0\nrootkit. 100.8\nbuffer_overflow. 91.7\nperl. 41.333\nloadmodule. 36.222\nftp_write. 32.375\nwarezmaster. 15.05\nimap. 6.0\nphf. 4.5\nguess_passwd. 2.717\nback. 0.129\nsatan. 0.04\nipsweep. 0.034\nnmap. 0.0\nsmurf. 0.0\npod. 0.0\nneptune. 0.0\nteardrop. 0.0\nland. 0.0\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825683_381577111",
      "id": "20211106-100025_1526258122",
      "dateCreated": "2021-11-06 10:00:25.683",
      "status": "READY"
    },
    {
      "text": "%md\nA small step into understanding what makes a network interaction be considered an attack.",
      "user": "anonymous",
      "dateUpdated": "2021-11-06 10:00:25.683",
      "progress": 0,
      "config": {
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eA small step into understanding what makes a network interaction be considered an attack.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636192825683_599166643",
      "id": "20211106-100025_1049581587",
      "dateCreated": "2021-11-06 10:00:25.683",
      "status": "READY"
    }
  ],
  "name": "11.rdd-key-value-pair",
  "id": "2GK18Q9QK",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}